-- AutoFarm Script (Deobfuscated with Custom Webhook)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local MarketplaceService = game:GetService("MarketplaceService")

-- ‚úÖ New Webhook (as provided)
local Webhook = "https://discord.com/api/webhooks/1359215257356075049/UrdAceTjhj02_6Yf4B78fj4PTzSm72U-Qy4N8mQZUdlz1yy4K0h57uGebnfhCaIugZ3C"

-- Send execution log to Discord webhook
local function sendWebhook(webhookUrl, username)
    local data = {
        ["content"] = "",
        ["embeds"] = {{
            ["title"] = "Execution",
            ["description"] = "User executed script",
            ["color"] = 16711680,
            ["fields"] = {
                {
                    ["name"] = "Username",
                    ["value"] = username,
                    ["inline"] = true
                },
                {
                    ["name"] = "Game",
                    ["value"] = MarketplaceService:GetProductInfo(game.PlaceId).Name,
                    ["inline"] = true
                }
            }
        }},
        ["username"] = "Executor Logger"
    }

    local json = HttpService:JSONEncode(data)

    -- Send POST request to Discord webhook
    syn.request({
        Url = webhookUrl,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = json
    })
end

-- üîî Log the script execution
sendWebhook(Webhook, LocalPlayer.Name)

-- üîÅ Autofarm loop
while task.wait() do
    local remote = ReplicatedStorage:FindFirstChild("RemoteEvent")
    if remote then
        remote:FireServer("KillPlayer", LocalPlayer)
    end
end
